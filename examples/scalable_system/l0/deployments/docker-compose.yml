version: "3.9"

services:
  nginx:
    image: nginx:1.27
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    networks:
      - app_net

  backend:
    build:
      context: ..
      dockerfile: deployments/Dockerfile
    container_name: scalable_backend
    ports:
      - "8080:8080"
    volumes:
      - ../configs:/app/configs:ro
      - ./logs:/app/logs
    restart: always
    environment:
      - DATABASE_URL=postgres://user:password@postgres:5432/appdb?sslmode=disable
    depends_on:
      - postgres
    networks:
      - app_net

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: appdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_net

  promtail:
    image: grafana/promtail:2.9.2
    container_name: promtail
    volumes:
      - ./promtail-config.yml:/etc/promtail/config.yml
      - ./logs:/app/logs
    command: -config.file=/etc/promtail/config.yml
    networks:
      - app_net

  loki:
    image: grafana/loki:2.9.2
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - app_net

  grafana:
    image: grafana/grafana:10.4.2
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - loki
      - postgres
    networks:
      - app_net

volumes:
  postgres_data:

networks:
  app_net:
    driver: bridge
