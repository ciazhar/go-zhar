version: "3.9"

services:
#  nginx:
#    image: nginx:1.27
#    container_name: nginx
#    ports:
#      - "80:80"
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf:ro
#    depends_on:
#      - backend

#  backend:
#    build:
#      context: ..
#      dockerfile: deployments/Dockerfile
#    container_name: scalable_backend
#    ports:
#      - "8080:8080"
#    volumes:
#      - ../configs:/app/configs:ro
#      - ./logs:/app/logs
#    restart: always
#    environment:
#      - DATABASE_URL=postgres://user:password@postgres:5432/appdb?sslmode=disable
#    depends_on:
#      - postgres

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: appdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_net

  grafana:
    image: grafana/grafana:10.4.1
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - loki
      - tempo

  loki:
    image: grafana/loki:2.9.4
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:2.9.4
    volumes:
      - ../logs:/var/log/app
      - ./promtail-config.yml:/etc/promtail/promtail-config.yml
    command: -config.file=/etc/promtail/promtail-config.yml
    depends_on:
      - loki

  tempo:
    image: grafana/tempo:2.4.1
    ports:
      - "3200:3200"   # Tempo UI/API
      - "4319:4319"   # OTLP gRPC receiver
      - "4320:4320"   # OTLP HTTP receiver
      - "14268:14268" # Jaeger HTTP receiver
      - "14250:14250" # Jaeger gRPC receiver
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.109.0
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC input (for your Go app)
      - "4318:4318"   # OTLP HTTP input (for your Go app)
    depends_on:
      - tempo
      - loki